import { api } from "./api";
import { Order } from "./types";

export const orderApi = api.injectEndpoints({
  endpoints: builder => ({
    // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    createOrder: builder.mutation<Order, { items: { productId: string; quantity: number }[] }>({
      query: orderData => ({
        url: "/orders",
        method: "POST",
        body: orderData,
      }),
    }),

    // üßæ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getMyOrders: builder.query<Order[], void>({
      query: () => ({
        url: "/orders",
        method: "GET",
      }),
    }),

    // üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –ø–æ ID
    getOrderById: builder.query<Order, string>({
      query: id => ({
        url: `/orders/${id}`,
        method: "GET",
      }),
    }),

    // üóë –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    deleteOrder: builder.mutation<{ message: string; orderId: string }, string>({
      query: id => ({
        url: `/orders/${id}`,
        method: "DELETE",
      }),
    }),

    // üõ†Ô∏è –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞: –≤—Å–µ –∑–∞–∫–∞–∑—ã
    getAllOrders: builder.query<Order[], void>({
      query: () => ({
        url: "/admin/orders",
        method: "GET",
      }),
    }),

    // üîç –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞: –∑–∞–∫–∞–∑—ã –ø–æ userId
    getOrdersByUserId: builder.query<Order[], string>({
      query: userId => ({
        url: `/orders/user/${userId}`,
        method: "GET",
      }),
    }),
  }),
});

export const {
  useCreateOrderMutation,
  useGetMyOrdersQuery,
  useGetOrderByIdQuery,
  useDeleteOrderMutation,
  useGetAllOrdersQuery,
  useGetOrdersByUserIdQuery,
  useLazyGetMyOrdersQuery,
} = orderApi;

export const {
  endpoints: {
    createOrder,
    getMyOrders,
    getOrderById,
    deleteOrder,
    getAllOrders,
    getOrdersByUserId,
  },
} = orderApi;
